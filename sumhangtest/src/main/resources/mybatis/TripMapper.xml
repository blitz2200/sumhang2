<?xml version="1.0" encoding= "UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- 여행 게시판  -->
<mapper namespace="tripControlMapper">
		
  	<resultMap id="travelSelectMap" type="trip">
  		<result property="travel" column="TRAVEL" jdbcType="VARCHAR" />
  		<result property="title" column="TITLE" jdbcType="VARCHAR" />
  		<result property="travelDescription" column="TRAVEL_DESCRIPTION" jdbcType="VARCHAR" />
  		<result property="travelStart" column="TRAVEL_START" jdbcType="DATE" />
  		<result property="travelEnd" column="TRAVEL_END" jdbcType="DATE" />
  		<result property="travelPho" column="TRAVEL_PHO" jdbcType="VARCHAR" /> 
  		<result property="travelUserCount" column="TRAVEL_USER_COUNT" jdbcType="NUMERIC" />
  		<result property="travelTag" column="TRAVEL_TAG" jdbcType="VARCHAR" />
  		<result property="likenum" column="likenum" jdbcType="NUMERIC"/>
  		<result property="travelNo" column="TBOARD_NO" jdbcType="NUMERIC"/>
  	</resultMap>
  	
  	
  	<!-- 여행작성입력 -->
  	<insert id="addTrip" parameterType="java.util.Map" useGeneratedKeys="true">  	
		INSERT 											
		INTO TBOARD(TRAVEL,TITLE,TRAVEL_DESCRIPTION,TRAVEL_START,
					TRAVEL_END,TRAVEL_PHO,TRAVEL_USER_COUNT,TRAVEL_TAG,TRAVEL_SPHOTO,USER_NO)
		VALUES ( 	#{travel},
					#{title},
					#{travelDescription},
					#{travelStart:DATE},
					#{travelEnd:DATE},
					#{travelPho},
					#{travelUserCount},
					#{travelTag},
					#{travelSphoto},
					#{userNo}
					 )						
	<selectKey keyProperty="travelNo" resultType="String">
 	   SELECT LAST_INSERT_ID()
 	</selectKey>
	</insert>
	
	<!-- 참가중인 여행목록 검색 -->
	<select id="getUserTrip" parameterType="int" resultType="Map">
		SELECT t.TBOARD_NO, t.USER_NO, t.TITLE, t.TRAVEL_START, t.TRAVEL_END, us.STATUS
		FROM TBOARD t, USER_STATUS us
		WHERE t.TBOARD_NO = us.TBOARD_NO AND us.USER_NO = #{value}	
	</select>
	
	<!-- 해당 여행에 참가중인 사용자들 검색 -->
	<select id="getTripUsers" resultType="Map">
		SELECT u.USER_NO, u.NICK, u.GENDER, u.USER_SPHOTO, us.STATUS
		FROM USER u,TBOARD t, USER_STATUS us
		WHERE u.USER_NO = us.USER_NO AND t.TBOARD_NO = us.TBOARD_NO AND t.TBOARD_NO = #{travelNo}
	</select>
	
	<!-- 사용자 상태 추가(방에 참가중인지 방장인지 등등)	 -->
	<insert id="addUserStatus" parameterType="userStatus">
		INSERT
		INTO USER_STATUS(TBOARD_NO, USER_NO, STATUS)
		VALUES ( 	#{tboardNo:NUMERIC},
					#{userNo:NUMERIC},
					#{status:NUMERIC}
					)
	</insert>
	
	<!-- 타임라인 추가 -->
	<insert id="addTimeLine" parameterType="timeLineVO">
		INSERT
		INTO TIMELINE(TBOARD_NO, USER_NO, TIMELINE_PHO, TIMELINE_DESCRIPTION)
		VALUES(	#{tboardNo:NUMERIC},
				#{userNo:NUMERIC},
				#{timeLinePhoto:VARCHAR},
				#{timeLineDesc:VARCHAR}
				)
	</insert>
	
	<!-- 타임라인 리스트 가져오기 -->
	<select id="getTimelineList" parameterType="String" resultType="Map">
		SELECT u.USER_SPHOTO, u.NICK, tl.TIMELINE_NO, tl.TIMELINE_PHO, tl.TIMELINE_DESCRIPTION, tl.TIMELINE_LIKE, ucount.JOINCOUNT
		FROM USER u, TIMELINE tl, (SELECT TBOARD_NO, COUNT(*) JOINCOUNT
										FROM USER_STATUS
										GROUP BY TBOARD_NO ) ucount
		WHERE u.USER_NO = tl.USER_NO AND ucount.TBOARD_NO = tl.TBOARD_NO AND tl.TBOARD_NO = #{value}
	</select>
	
	<!-- 타임라인 리플 입력 -->
	<insert id="timelineReply" parameterType="Map">
		INSERT
		INTO TIMEREPLY(TIMELINE_NO, TBOARD_NO, USER_NO, REPLY)
		VALUES(	#{timelineNo:NUMERIC},
				#{tboardNo:NUMERIC},
				#{userNo:NUMERIC},
				#{reply:VARCHAR}
				)
	</insert>
	
	
	<!-- 메인페이지 여행목록가져오기 -->
	<select id="getTripList" parameterType="int" resultType="Map">
		SELECT TBOARD_NO, USER_NO, TITLE, TRAVEL, TRAVEL_START, TRAVEL_END, TRAVEL_USER_COUNT, 
			  TRAVEL_SPHOTO,TRAVEL_DESCRIPTION, TRAVEL_PHO, TRAVEL_TAG
		FROM TBOARD
		ORDER BY TBOARD_NO DESC LIMIT #{value},5
	</select>
		
	<!-- 여행에서 사용자 추방 -->
	<delete id="kickOutTripUser" parameterType="Map">
		DELETE
		FROM USER_STATUS
		WHERE
		USER_NO = #{userNo} AND TBOARD_NO = #{tBoardNo}
	</delete>
	
	
	
   <!-- 메인 상세보기 출력 -->
	<select id="tripDetail" parameterType="trip" resultType="Map">
		select t.travel, t.TBOARD_NO, t.USER_NO, u.user_sphoto, u.nick,u.PUSH,t.title,
			 t.travel_start, t.travel_end, t.TRAVEL_DESCRIPTION,t.TRAVEL_USER_COUNT,
			 t.TRAVEL_PHO, ucount.JOINCOUNT
			 from TBOARD t, USER u, (SELECT TBOARD_NO, COUNT(*) JOINCOUNT
										FROM USER_STATUS
										GROUP BY TBOARD_NO ) ucount
		where u.USER_NO=t.USER_NO AND ucount.TBOARD_NO = t.TBOARD_NO AND t.TBOARD_NO = #{travelNo}
	</select>
	
	<!-- 여행에 참가중인 인원 뽑아내기 -->
	<select id="getTripUserNum" parameterType="int" resultType="int">
		SELECT ucount.TBOARD_NO, ucount.JOINCOUNT
		FROM (SELECT TBOARD_NO, COUNT(*) JOINCOUNT
					FROM USER_STATUS
					GROUP BY TBOARD_NO) ucount
		WHERE ucount.TBOARD_NO = #{value}
	</select>
	
   <!-- 메인 상세보기 수정 -->
	<update id="updateTripDetail" parameterType='trip'>
		update TBOARD set title=#{title}, travel=#{travel}, travel_start=#{travelStart}, 
		travel_end=#{travelEnd}, travel_pho=#{travelPho},travel_sphoto=#{travelSphoto}, travel_description=#{travelDescription}
		where tboard_no=#{travelNo}
	</update>
	
	
   <!-- 메인 상세보기 삭제 시작 -->
	<delete id="deleteTripDetail" parameterType="int">
		delete from TBOARD where tboard_no=#{travelNo}
	</delete>
	
	
	<!-- 메인상세보기 리플  입력 시적 --> 
	<insert id="tripReply" parameterType="trip">
		insert into TBOARD_RE(tboard_no,user_no,tboard_re_description)
			value (#{travelNo},#{userNo},#{tripDetailReply})
	</insert>
	
	
	<select id="selectTripDetailReply" parameterType="int" resultType="Map">
		select u.nick, tr.TBOARD_RE_DESCRIPTION, 
			   tr.user_no, u.user_sphoto, tr.TRAVEL_BOARD_REPLY_NO
		from USER u, TBOARD t, TBOARD_RE tr 	
		where  u.USER_NO=tr.USER_NO and t.TBOARD_NO=tr.TBOARD_NO and tr.TBOARD_NO=#{travelNo}
	</select>
	
	<delete id="deleteTripDetailReply" parameterType="int">
		delete from TBOARD_RE where travel_board_reply_no=#{tripDetailReNo}
	</delete>
	
	<update id="updateTripDetailReply" parameterType='trip'>
		update TBOARD_RE set tboard_re_description=#{tripDetailReply}
	    where travel_board_reply_no=#{tripDetailReNo}
	</update>
	
	<!-- 여행 참가하기 버튼 누르면 방장한테 푸쉬 날리기 -->
	<select id="selectPushTripUser" parameterType='int' resultType="Map">
		select u.REGISTID from USER u, TBOARD t
		where u.USER_NO=t.USER_NO and t.TBOARD_NO=#{traveNo}
	</select>
	
	
	<!-- 무작위로 초대 -->
	<select id="invite" resultType="Map">
	  SELECT USER_NO, NAME, nick, GENDER,PUSH,USER_SPHOTO
	  FROM USER 
	  where push='yes'
      ORDER BY RAND() LIMIT 5
	</select>
</mapper>
